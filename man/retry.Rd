% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun-retry.R
\name{retry}
\alias{retry}
\title{rerun a function call in case of error}
\usage{
retry(call, max.iter, fail = NA, verbose = FALSE)
}
\arguments{
\item{call}{call to retry}

\item{max.iter}{maximum number of iterations after which failure is declared}

\item{fail}{object to return in case of failure}

\item{verbose}{logical flag whether to print iterations as messages}
}
\value{
\code{retry} returns the same as the function in \code{call}
or as defined by \code{fail}.
}
\description{
If a call returns an error, run it again.
}
\details{
Iterative calling of a function that can return a random error
can crash a process or at the very least result in incomplete data.
To alleviate the impact of random errors the failed call will be rerun
until it succeeds or until a limit of attempts is reached.
If all attempts fail, a backup value will be returned.
}
\examples{
f <- function() {
  x <- sample(1:2, size = 1)
  if (x == 1) stop("it's a 1", call. = TRUE)
  return(x)
}
\dontrun{
f()
replicate(10, f())
}

retry(f(), 2, "failed", TRUE)
table(replicate(100, retry(f(), 2, "failed", FALSE)))


}
